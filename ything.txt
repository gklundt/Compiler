Binary file UnitTests/SymbolTable/STTest matches
Binary file Semantics.o matches
Binary file pas matches
Classes/Semantics/Semantics.h:38:	void yyerror(string m);
Classes/Semantics/Semantics.cpp:12:void Semantics::yyerror(string m) {
Classes/Semantics/Rules/procedure_statement.cpp:19:		yyerror("Semantic error - ID cannot be found");
Classes/Semantics/Rules/procedure_statement.cpp:25:		yyerror("Semantic error - ID must be a procedure");
Classes/Semantics/Rules/procedure_statement.cpp:62:		yyerror("Semantic error - ID cannot be found");
Classes/Semantics/Rules/procedure_statement.cpp:68:		yyerror("Semantic error - ID must be a procedure");
Classes/Semantics/Rules/simple_expression.cpp:21:		yyerror("Semantic error: term must be integer or real");
Classes/Semantics/Rules/simple_expression.cpp:113:		yyerror("Semantic error: the left expression must be Boolean");
Classes/Semantics/Rules/simple_expression.cpp:115:		yyerror("Semantic error: the right expression must be Boolean");
Classes/Semantics/Rules/simple_expression.cpp:137:	yyerror("Semantic error: invalid addop");
Classes/Semantics/Rules/coercetoreal.cpp:6:		yyerror("Semantic error: left expression is not Integer and not Real");
Classes/Semantics/Rules/coercetoreal.cpp:18:		yyerror("Semantic error: right expression is not Integer and not Real");
Classes/Semantics/Rules/expression.cpp:15:		yyerror("Semantic Error:unequal left and right types.");
Classes/Semantics/Rules/expression.cpp:47:	yyerror("Semantic error: invalid relop");
Classes/Semantics/Rules/factor.cpp:7:		yyerror("Semantic error - ID cannot be found(factor:6)");
Classes/Semantics/Rules/factor.cpp:21:	case sk_type:      //Not valid - call yyerror
Classes/Semantics/Rules/factor.cpp:22:		yyerror("Semantic error - ID cannot be a type name ");
Classes/Semantics/Rules/factor.cpp:29:			yyerror("Semantic error - ID must be a function ");
Classes/Semantics/Rules/factor.cpp:118:		yyerror("Semantic error - ID cannot be found(factor:104)");
Classes/Semantics/Rules/factor.cpp:120:		yyerror("Semantic error: identifier is not a variable");
Classes/Semantics/Rules/factor.cpp:127:		yyerror("Semantic error: identifier is not an array");
Classes/Semantics/Rules/factor.cpp:134:		yyerror("Semantic error: index expression is not an integer");
Classes/Semantics/Rules/factor.cpp:305:		yyerror("Semantic error - ID cannot be found(factor:286)");
Classes/Semantics/Rules/factor.cpp:312:		yyerror("Semantic error - ID must be function");
Classes/Semantics/Rules/factor.cpp:333:		yyerror("Semantic error NOT operand is not Boolean");
Classes/Semantics/Rules/term.cpp:34:		yyerror("Semantic error: the left expressions must be real");
Classes/Semantics/Rules/term.cpp:36:		yyerror("Semantic error: the right expressions must be real");
Classes/Semantics/Rules/term.cpp:51:		yyerror("Semantic error:: the left expression must be integer");
Classes/Semantics/Rules/term.cpp:53:		yyerror("Semantic error:: the right expression must be integer");
Classes/Semantics/Rules/term.cpp:66:		yyerror("Semantic error:: the left expression must be integer");
Classes/Semantics/Rules/term.cpp:68:		yyerror("Semantic error:: the right expression must be integer");
Classes/Semantics/Rules/term.cpp:81:		yyerror("Semantic error:: the left expression must be Boolean");
Classes/Semantics/Rules/term.cpp:83:		yyerror("Semantic error:: the right expression must be Boolean");
Classes/Semantics/Rules/term.cpp:113:	yyerror("Semantic error: invalid mulop");
Classes/Semantics/Rules/statement.cpp:11:		yyerror("Semantic error:Assignment type mismatch");
Classes/Semantics/Rules/variable.cpp:25:		yyerror("Semantic error - ID cannot be found");
Classes/Semantics/Rules/variable.cpp:39:		yyerror("Semantic error - ID must be a variable or a function");
Classes/Semantics/Rules/variable.cpp:68:		yyerror("Semantic error - ID cannot be found");
Classes/Semantics/Rules/variable.cpp:70:		yyerror("Semantic error: identifier is not a variable");
Classes/Semantics/Rules/variable.cpp:77:		yyerror("Semantic error: identifier is not an array");
Classes/Semantics/Rules/variable.cpp:84:		yyerror("Semantic error: index expression is not an integer");
Classes/SymbolTable/Sym.cpp:23://#include "yyerror.h"
Classes/SymbolTable/Symbols/SubprogramSymbol.cpp:51:		yyerror("Semantic error: no return type.");
Classes/SymbolTable/Symbols/SubprogramSymbol.cpp:67:		yyerror("Semantic error: no return type.");
Classes/SymbolTable/Symbols/SubprogramSymbol.h:9:extern void yyerror(string s);
paspar.y:20:extern void yyerror(string s);
paspar.y:401:void yyerror(string s) {
paspar.cpp:85:extern void yyerror(string s);
paspar.cpp:767:#define YYERROR         goto yyerrorlab
paspar.cpp:784:      yyerror (YY_("syntax error: cannot back up")); \
paspar.cpp:785:      YYERROR;                                                  \
paspar.cpp:982:   quotes and backslashes, so that it's suitable for yyerror.  The
paspar.cpp:1908:     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
paspar.cpp:1911:     case of YYERROR or YYBACKUP, subsequent parser actions might lead
paspar.cpp:1950:      yyerror (YY_("syntax error"));
paspar.cpp:1977:        yyerror (yymsgp);
paspar.cpp:2012:| yyerrorlab -- error raised explicitly by YYERROR.  |
paspar.cpp:2017:     YYERROR and the label yyerrorlab therefore never appears in user
paspar.cpp:2023:     this YYERROR.  */
paspar.cpp:2032:| yyerrlab1 -- common code for both syntax error and YYERROR.  |
paspar.cpp:2094:  yyerror (YY_("memory exhausted"));
paspar.cpp:2196:void yyerror(string s) {
