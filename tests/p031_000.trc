
Token:Code=292 Name=PROGRAM line=12 col=1 Spelling="program"
Token:Code=298 Name=ID line=12 col=9 Spelling="p031_000"
Token:Code=265 Name=SEMICOLON line=12 col=17 Spelling=";"
#005 program_parameters --> empty
#002 program_head --> PROGRAM ID(p031_000) program_parameters ;
#010 variable_declarations --> empty
Token:Code=296 Name=VAR line=13 col=3 Spelling="var"
Token:Code=298 Name=ID line=13 col=7 Spelling="cash"
#008 identifier_list --> ID(cash) identifier_list={cash}
Token:Code=266 Name=COLON line=13 col=11 Spelling=":"
Token:Code=298 Name=ID line=13 col=12 Spelling="real"
#014 standard_type --> ID(real)
Symbol(Type Symbol) id(real)
  type(Real)
    size(1) alignment(1)
#012 type --> standard_type 
Token:Code=265 Name=SEMICOLON line=13 col=16 Spelling=";"
#011 variable_declarations --> variable_declarations VAR identifier_list({cash}) : type ; 
Token:Code=280 Name=BEGIN line=14 col=1 Spelling="begin"
#015 subprogram_declarations --> empty
#003 program_declarations --> variable_declarations subprogram_declarations
Token:Code=298 Name=ID line=15 col=3 Spelling="writestring"
Token:Code=273 Name=LPAREN line=15 col=14 Spelling="("
Token:Code=301 Name=CHRLIT line=15 col=15 Spelling="'how much cash do you have? '"
#070 factor --> CHRLIT('how much cash do you have? ') 
#056 term --> factor 
Token:Code=274 Name=RPAREN line=15 col=44 Spelling=")"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#038 expression_list --> expression 
#037 procedure_statement --> ID(writestring) ( expression_list ) 
          csp                 wrs       
#030 statement --> procedure_statement 
#027 statement_list --> statement 
Token:Code=265 Name=SEMICOLON line=15 col=45 Spelling=";"
Token:Code=298 Name=ID line=16 col=3 Spelling="readreal"
Token:Code=273 Name=LPAREN line=16 col=11 Spelling="("
Token:Code=298 Name=ID line=16 col=12 Spelling="cash"
Token:Code=274 Name=RPAREN line=16 col=16 Spelling=")"
#063 factor --> ID(cash) 
Symbol(Variable Symbol) id(cash)
  type(Real)
    size(1) alignment(1)
  lexicallevel(1) address(5)
#056 term --> factor 
#048 simple_expression --> term 
#040 expression --> simple_expression 
#038 expression_list --> expression 
#037 procedure_statement --> ID(readreal) ( expression_list ) 
          csp                 rdr       
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
Token:Code=265 Name=SEMICOLON line=16 col=17 Spelling=";"
Token:Code=298 Name=ID line=17 col=3 Spelling="readln"
Token:Code=265 Name=SEMICOLON line=17 col=9 Spelling=";"
#036 procedure_statement --> ID(readln) 
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
Token:Code=286 Name=IF line=18 col=3 Spelling="if"
Token:Code=298 Name=ID line=18 col=6 Spelling="cash"
Token:Code=269 Name=LES line=18 col=10 Spelling="<"
#063 factor --> ID(cash) 
Symbol(Variable Symbol) id(cash)
  type(Real)
    size(1) alignment(1)
  lexicallevel(1) address(5)
#056 term --> factor 
#048 simple_expression --> term 
#044 relop --> < 
Token:Code=300 Name=REALIT line=18 col=11 Spelling="100.0"
#069 factor --> REALIT(100.0) 
#056 term --> factor 
Token:Code=293 Name=THEN line=18 col=17 Spelling="then"
#048 simple_expression --> term 
#041 expression --> simple_expression relop simple_expression 
Token:Code=280 Name=BEGIN line=19 col=5 Spelling="begin"
Token:Code=298 Name=ID line=20 col=7 Spelling="writestring"
Token:Code=273 Name=LPAREN line=20 col=18 Spelling="("
Token:Code=301 Name=CHRLIT line=20 col=19 Spelling="'you wicked and slothful person.'"
#070 factor --> CHRLIT('you wicked and slothful person.') 
#056 term --> factor 
Token:Code=274 Name=RPAREN line=20 col=52 Spelling=")"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#038 expression_list --> expression 
#037 procedure_statement --> ID(writestring) ( expression_list ) 
          csp                 wrs       
#030 statement --> procedure_statement 
#027 statement_list --> statement 
Token:Code=265 Name=SEMICOLON line=20 col=53 Spelling=";"
Token:Code=298 Name=ID line=21 col=7 Spelling="writeln"
Token:Code=265 Name=SEMICOLON line=21 col=14 Spelling=";"
#036 procedure_statement --> ID(writeln) 
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
Token:Code=298 Name=ID line=22 col=7 Spelling="writestring"
Token:Code=273 Name=LPAREN line=22 col=18 Spelling="("
Token:Code=301 Name=CHRLIT line=22 col=19 Spelling="'i''d never go out with you.'"
#070 factor --> CHRLIT('i''d never go out with you.') 
#056 term --> factor 
Token:Code=274 Name=RPAREN line=22 col=48 Spelling=")"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#038 expression_list --> expression 
#037 procedure_statement --> ID(writestring) ( expression_list ) 
          csp                 wrs       
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
Token:Code=265 Name=SEMICOLON line=22 col=49 Spelling=";"
Token:Code=298 Name=ID line=23 col=7 Spelling="writeln"
Token:Code=284 Name=END line=24 col=5 Spelling="end"
#036 procedure_statement --> ID(writeln) 
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
#026 optional_statements --> statement_list 
#024 compound_statement --> BEGIN optional_statements END 
#031 statement --> compound_statement 
Token:Code=283 Name=ELSE line=25 col=3 Spelling="else"
Token:Code=280 Name=BEGIN line=26 col=5 Spelling="begin"
Token:Code=298 Name=ID line=27 col=7 Spelling="writestring"
Token:Code=273 Name=LPAREN line=27 col=18 Spelling="("
Token:Code=301 Name=CHRLIT line=27 col=19 Spelling="'come on, honey, let''s have a good time tonight!'"
#070 factor --> CHRLIT('come on, honey, let''s have a good time tonight!') 
#056 term --> factor 
Token:Code=274 Name=RPAREN line=27 col=69 Spelling=")"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#038 expression_list --> expression 
#037 procedure_statement --> ID(writestring) ( expression_list ) 
          csp                 wrs       
#030 statement --> procedure_statement 
#027 statement_list --> statement 
Token:Code=265 Name=SEMICOLON line=27 col=70 Spelling=";"
Token:Code=298 Name=ID line=28 col=7 Spelling="writeln"
Token:Code=284 Name=END line=29 col=5 Spelling="end"
#036 procedure_statement --> ID(writeln) 
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
#026 optional_statements --> statement_list 
#024 compound_statement --> BEGIN optional_statements END 
#031 statement --> compound_statement 
#032 statement --> IF expression THEN statement ELSE statement 
          lvr       0         5         
          ldc       r         100.0     
          les       r                   
          fjp                 L00001    
          ldc       c         'you wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       c         'i''d never go out with you.'
          csp                 wrs       
          csp                 wln       
          ujp                 L00002    
L00001                                  
          ldc       c         'come on, honey, let''s have a good time tonight!'
          csp                 wrs       
          csp                 wln       
L00002                                  
#028 statement_list --> statement_list ; statement 
Token:Code=265 Name=SEMICOLON line=29 col=8 Spelling=";"
Token:Code=298 Name=ID line=30 col=3 Spelling="writestring"
Token:Code=273 Name=LPAREN line=30 col=14 Spelling="("
Token:Code=301 Name=CHRLIT line=30 col=15 Spelling="'see you later!'"
#070 factor --> CHRLIT('see you later!') 
#056 term --> factor 
Token:Code=274 Name=RPAREN line=30 col=31 Spelling=")"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#038 expression_list --> expression 
#037 procedure_statement --> ID(writestring) ( expression_list ) 
          csp                 wrs       
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
Token:Code=265 Name=SEMICOLON line=30 col=32 Spelling=";"
Token:Code=298 Name=ID line=31 col=3 Spelling="writeln"
Token:Code=284 Name=END line=32 col=1 Spelling="end"
#036 procedure_statement --> ID(writeln) 
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
#026 optional_statements --> statement_list 
#024 compound_statement --> BEGIN optional_statements END 
Token:Code=263 Name=PERIOD line=32 col=14 Spelling="."
#004 program_body --> compound_statement .
#001 program --> program_head program_declarations program_body
Locality: lexical level 1

  Symbol(Variable Symbol) id(cash)
    type(Real)
      size(1) alignment(1)
    lexicallevel(1) address(5)

Locality: lexical level 0

  Symbol(Standard Function Symbol) id(abs)
    type(Void)
      size(0) alignment(0)
    cspid(abs)
  Symbol(Type Symbol) id(boolean)
    type(Boolean)
      size(1) alignment(1)
  Symbol(Type Symbol) id(char)
    type(Character)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(chr)
    type(Void)
      size(0) alignment(0)
    cspid(chr)
  Symbol(Constant Symbol) id(false)
    type(Boolean)
      size(1) alignment(1)
    Constant value(0)
      type(Boolean)
        size(1) alignment(1)
  Symbol(Type Symbol) id(integer)
    type(Integer)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(ord)
    type(Void)
      size(0) alignment(0)
    cspid(ord)
  Symbol(Program Symbol) id(p031_000)
    type(Void)
      size(0) alignment(0)
    lexicallevel(0) elabel(L00001) splabel(L00002) eplabel(L00003)
  Symbol(Standard Function Symbol) id(pred)
    type(Void)
      size(0) alignment(0)
    cspid(dec)
  Symbol(Standard Procedure Symbol) id(readchar)
    type(Void)
      size(0) alignment(0)
    cspid(rdc)
  Symbol(Standard Procedure Symbol) id(readinteger)
    type(Void)
      size(0) alignment(0)
    cspid(rdi)
  Symbol(Standard Procedure Symbol) id(readln)
    type(Void)
      size(0) alignment(0)
    cspid(rln)
  Symbol(Standard Procedure Symbol) id(readreal)
    type(Void)
      size(0) alignment(0)
    cspid(rdr)
  Symbol(Standard Procedure Symbol) id(readstring)
    type(Void)
      size(0) alignment(0)
    cspid(rds)
  Symbol(Type Symbol) id(real)
    type(Real)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(round)
    type(Void)
      size(0) alignment(0)
    cspid(rnd)
  Symbol(Standard Function Symbol) id(sqrt)
    type(Void)
      size(0) alignment(0)
    cspid(sqt)
  Symbol(Standard Function Symbol) id(succ)
    type(Void)
      size(0) alignment(0)
    cspid(inc)
  Symbol(Constant Symbol) id(true)
    type(Boolean)
      size(1) alignment(1)
    Constant value(1)
      type(Boolean)
        size(1) alignment(1)
  Symbol(Standard Function Symbol) id(trunc)
    type(Void)
      size(0) alignment(0)
    cspid(trc)
  Symbol(Standard Procedure Symbol) id(writeboolean)
    type(Void)
      size(0) alignment(0)
    cspid(wrb)
  Symbol(Standard Procedure Symbol) id(writechar)
    type(Void)
      size(0) alignment(0)
    cspid(wrc)
  Symbol(Standard Procedure Symbol) id(writeexponential)
    type(Void)
      size(0) alignment(0)
    cspid(wre)
  Symbol(Standard Procedure Symbol) id(writefixed)
    type(Void)
      size(0) alignment(0)
    cspid(wrf)
  Symbol(Standard Procedure Symbol) id(writeinteger)
    type(Void)
      size(0) alignment(0)
    cspid(wri)
  Symbol(Standard Procedure Symbol) id(writeln)
    type(Void)
      size(0) alignment(0)
    cspid(wln)
  Symbol(Standard Procedure Symbol) id(writestring)
    type(Void)
      size(0) alignment(0)
    cspid(wrs)

