
Token:Code=292 Name=PROGRAM line=12 col=1 Spelling="program"
Token:Code=298 Name=ID line=12 col=9 Spelling="p034_000"
Token:Code=265 Name=SEMICOLON line=12 col=17 Spelling=";"
#005 program_parameters --> empty
#002 program_head --> PROGRAM ID(p034_000) program_parameters ;
#010 variable_declarations --> empty
Token:Code=296 Name=VAR line=13 col=3 Spelling="var"
Token:Code=298 Name=ID line=13 col=7 Spelling="count"
#008 identifier_list --> ID(count) identifier_list={count}
Token:Code=266 Name=COLON line=13 col=12 Spelling=":"
Token:Code=298 Name=ID line=13 col=13 Spelling="integer"
#014 standard_type --> ID(integer)
Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
#012 type --> standard_type 
Token:Code=265 Name=SEMICOLON line=13 col=20 Spelling=";"
#011 variable_declarations --> variable_declarations VAR identifier_list({count}) : type ; 
Token:Code=280 Name=BEGIN line=14 col=1 Spelling="begin"
#015 subprogram_declarations --> empty
#003 program_declarations --> variable_declarations subprogram_declarations
Token:Code=298 Name=ID line=15 col=3 Spelling="count"
Token:Code=262 Name=ASSIGN line=15 col=8 Spelling=":="
#034 variable --> ID(count)
Symbol(Variable Symbol) id(count)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(1) address(5)
          lda       0         5         
Token:Code=299 Name=INTLIT line=15 col=10 Spelling="10"
#068 factor --> INTLIT(10) 
#056 term --> factor 
Token:Code=265 Name=SEMICOLON line=15 col=12 Spelling=";"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#029 statement --> variable := expression 
          lda       0         5         
          ldc       i         10        
          sti       i                   
#027 statement_list --> statement 
Token:Code=297 Name=WHILE line=16 col=3 Spelling="while"
Token:Code=298 Name=ID line=16 col=9 Spelling="count"
Token:Code=272 Name=GEQ line=16 col=14 Spelling=">="
#063 factor --> ID(count) 
Symbol(Variable Symbol) id(count)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(1) address(5)
#056 term --> factor 
#048 simple_expression --> term 
#047 relop --> >= 
Token:Code=299 Name=INTLIT line=16 col=16 Spelling="0"
#068 factor --> INTLIT(0) 
#056 term --> factor 
Token:Code=282 Name=DO line=16 col=18 Spelling="do"
#048 simple_expression --> term 
#041 expression --> simple_expression relop simple_expression 
Token:Code=280 Name=BEGIN line=17 col=3 Spelling="begin"
Token:Code=298 Name=ID line=18 col=5 Spelling="writeinteger"
Token:Code=273 Name=LPAREN line=18 col=17 Spelling="("
Token:Code=298 Name=ID line=18 col=18 Spelling="count"
Token:Code=274 Name=RPAREN line=18 col=23 Spelling=")"
#063 factor --> ID(count) 
Symbol(Variable Symbol) id(count)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(1) address(5)
#056 term --> factor 
#048 simple_expression --> term 
#040 expression --> simple_expression 
#038 expression_list --> expression 
#037 procedure_statement --> ID(writeinteger) ( expression_list ) 
          csp                 wri       
#030 statement --> procedure_statement 
#027 statement_list --> statement 
Token:Code=265 Name=SEMICOLON line=18 col=24 Spelling=";"
Token:Code=298 Name=ID line=19 col=5 Spelling="writestring"
Token:Code=273 Name=LPAREN line=19 col=16 Spelling="("
Token:Code=301 Name=CHRLIT line=19 col=17 Spelling="', '"
#070 factor --> CHRLIT(', ') 
#056 term --> factor 
Token:Code=274 Name=RPAREN line=19 col=21 Spelling=")"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#038 expression_list --> expression 
#037 procedure_statement --> ID(writestring) ( expression_list ) 
          csp                 wrs       
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
Token:Code=265 Name=SEMICOLON line=19 col=22 Spelling=";"
Token:Code=298 Name=ID line=20 col=5 Spelling="count"
Token:Code=262 Name=ASSIGN line=20 col=10 Spelling=":="
#034 variable --> ID(count)
Symbol(Variable Symbol) id(count)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(1) address(5)
          lda       0         5         
Token:Code=298 Name=ID line=20 col=12 Spelling="count"
Token:Code=259 Name=MINUS line=20 col=17 Spelling="-"
#063 factor --> ID(count) 
Symbol(Variable Symbol) id(count)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(1) address(5)
#056 term --> factor 
#048 simple_expression --> term 
#054 addop --> - 
Token:Code=299 Name=INTLIT line=20 col=18 Spelling="1"
#068 factor --> INTLIT(1) 
#056 term --> factor 
Token:Code=284 Name=END line=21 col=3 Spelling="end"
#050 simple_expression --> simple_expression addop term 
#040 expression --> simple_expression 
#029 statement --> variable := expression 
          lda       0         5         
          lvi       0         5         
          ldc       i         1         
          sbi                           
          sti       i                   
#028 statement_list --> statement_list ; statement 
#026 optional_statements --> statement_list 
#024 compound_statement --> BEGIN optional_statements END 
#031 statement --> compound_statement 
#033 statement --> WHILE expression DO statement 
L00004                                  
          lvi       0         5         
          ldc       i         0         
          geq       i                   
          fjp                 L00005    
          lvi       0         5         
          csp                 wri       
          ldc       c         ', '      
          csp                 wrs       
          lda       0         5         
          lvi       0         5         
          ldc       i         1         
          sbi                           
          sti       i                   
          ujp                 L00004    
L00005                                  
#028 statement_list --> statement_list ; statement 
Token:Code=265 Name=SEMICOLON line=21 col=13 Spelling=";"
Token:Code=298 Name=ID line=22 col=3 Spelling="writestring"
Token:Code=273 Name=LPAREN line=22 col=14 Spelling="("
Token:Code=301 Name=CHRLIT line=22 col=15 Spelling="'blast off!'"
#070 factor --> CHRLIT('blast off!') 
#056 term --> factor 
Token:Code=274 Name=RPAREN line=22 col=27 Spelling=")"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#038 expression_list --> expression 
#037 procedure_statement --> ID(writestring) ( expression_list ) 
          csp                 wrs       
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
Token:Code=265 Name=SEMICOLON line=22 col=28 Spelling=";"
Token:Code=298 Name=ID line=23 col=3 Spelling="writeln"
Token:Code=284 Name=END line=24 col=1 Spelling="end"
#036 procedure_statement --> ID(writeln) 
#030 statement --> procedure_statement 
#028 statement_list --> statement_list ; statement 
#026 optional_statements --> statement_list 
#024 compound_statement --> BEGIN optional_statements END 
Token:Code=263 Name=PERIOD line=24 col=14 Spelling="."
#004 program_body --> compound_statement .
#001 program --> program_head program_declarations program_body
Locality: lexical level 1

  Symbol(Variable Symbol) id(count)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(1) address(5)

Locality: lexical level 0

  Symbol(Standard Function Symbol) id(abs)
    type(Void)
      size(0) alignment(0)
    cspid(abs)
  Symbol(Type Symbol) id(boolean)
    type(Boolean)
      size(1) alignment(1)
  Symbol(Type Symbol) id(char)
    type(Character)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(chr)
    type(Void)
      size(0) alignment(0)
    cspid(chr)
  Symbol(Constant Symbol) id(false)
    type(Boolean)
      size(1) alignment(1)
    Constant value(0)
      type(Boolean)
        size(1) alignment(1)
  Symbol(Type Symbol) id(integer)
    type(Integer)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(ord)
    type(Void)
      size(0) alignment(0)
    cspid(ord)
  Symbol(Program Symbol) id(p034_000)
    type(Void)
      size(0) alignment(0)
    lexicallevel(0) elabel(L00001) splabel(L00002) eplabel(L00003)
  Symbol(Standard Function Symbol) id(pred)
    type(Void)
      size(0) alignment(0)
    cspid(dec)
  Symbol(Standard Procedure Symbol) id(readchar)
    type(Void)
      size(0) alignment(0)
    cspid(rdc)
  Symbol(Standard Procedure Symbol) id(readinteger)
    type(Void)
      size(0) alignment(0)
    cspid(rdi)
  Symbol(Standard Procedure Symbol) id(readln)
    type(Void)
      size(0) alignment(0)
    cspid(rln)
  Symbol(Standard Procedure Symbol) id(readreal)
    type(Void)
      size(0) alignment(0)
    cspid(rdr)
  Symbol(Standard Procedure Symbol) id(readstring)
    type(Void)
      size(0) alignment(0)
    cspid(rds)
  Symbol(Type Symbol) id(real)
    type(Real)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(round)
    type(Void)
      size(0) alignment(0)
    cspid(rnd)
  Symbol(Standard Function Symbol) id(sqrt)
    type(Void)
      size(0) alignment(0)
    cspid(sqt)
  Symbol(Standard Function Symbol) id(succ)
    type(Void)
      size(0) alignment(0)
    cspid(inc)
  Symbol(Constant Symbol) id(true)
    type(Boolean)
      size(1) alignment(1)
    Constant value(1)
      type(Boolean)
        size(1) alignment(1)
  Symbol(Standard Function Symbol) id(trunc)
    type(Void)
      size(0) alignment(0)
    cspid(trc)
  Symbol(Standard Procedure Symbol) id(writeboolean)
    type(Void)
      size(0) alignment(0)
    cspid(wrb)
  Symbol(Standard Procedure Symbol) id(writechar)
    type(Void)
      size(0) alignment(0)
    cspid(wrc)
  Symbol(Standard Procedure Symbol) id(writeexponential)
    type(Void)
      size(0) alignment(0)
    cspid(wre)
  Symbol(Standard Procedure Symbol) id(writefixed)
    type(Void)
      size(0) alignment(0)
    cspid(wrf)
  Symbol(Standard Procedure Symbol) id(writeinteger)
    type(Void)
      size(0) alignment(0)
    cspid(wri)
  Symbol(Standard Procedure Symbol) id(writeln)
    type(Void)
      size(0) alignment(0)
    cspid(wln)
  Symbol(Standard Procedure Symbol) id(writestring)
    type(Void)
      size(0) alignment(0)
    cspid(wrs)

