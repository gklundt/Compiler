
Token:Code=292 Name=PROGRAM line=12 col=1 Spelling="program"
Token:Code=298 Name=ID line=12 col=9 Spelling="p036_000"
Token:Code=265 Name=SEMICOLON line=12 col=17 Spelling=";"
#005 program_parameters --> empty
#002 program_head --> PROGRAM ID(p036_000) program_parameters ;
#010 variable_declarations --> empty
Token:Code=291 Name=PROCEDURE line=13 col=3 Spelling="procedure"
#015 subprogram_declarations --> empty
Token:Code=298 Name=ID line=13 col=13 Spelling="hello"
Token:Code=265 Name=SEMICOLON line=13 col=18 Spelling=";"
#020 sub_program_parameters --> empty 
#019 subprogram_head --> PROCEDURE ID(hello) sub_program_parameters ; 
#010 variable_declarations --> empty
Token:Code=280 Name=BEGIN line=14 col=3 Spelling="begin"
Token:Code=298 Name=ID line=15 col=5 Spelling="writeln"
Token:Code=273 Name=LPAREN line=15 col=12 Spelling="("
Token:Code=301 Name=CHRLIT line=15 col=13 Spelling="'hello, i love you.'"
#070 factor --> CHRLIT('hello, i love you.') 
#056 term --> factor 
Token:Code=274 Name=RPAREN line=15 col=33 Spelling=")"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#038 expression_list --> expression 
#037 procedure_statement --> ID(writeln) ( expression_list ) 
          csp                 wln       
#030 statement --> procedure_statement 
#027 statement_list --> statement 
Token:Code=284 Name=END line=16 col=3 Spelling="end"
#026 optional_statements --> statement_list 
#024 compound_statement --> BEGIN optional_statements END 
#017 subprogram_declaration --> subprogram_head variable_declarations compound_statement 
Locality: lexical level 2


Token:Code=265 Name=SEMICOLON line=16 col=13 Spelling=";"
#016 subprogram_declarations --> subprogram_declarations subprogram_declaration ; 
Token:Code=280 Name=BEGIN line=17 col=1 Spelling="begin"
#003 program_declarations --> variable_declarations subprogram_declarations
Token:Code=298 Name=ID line=18 col=3 Spelling="hello"
Token:Code=284 Name=END line=19 col=1 Spelling="end"
#036 procedure_statement --> ID(hello) 
          mst       0                   
          cup       0         L00004    
#030 statement --> procedure_statement 
#027 statement_list --> statement 
#026 optional_statements --> statement_list 
#024 compound_statement --> BEGIN optional_statements END 
Token:Code=263 Name=PERIOD line=19 col=14 Spelling="."
#004 program_body --> compound_statement .
#001 program --> program_head program_declarations program_body
Locality: lexical level 1

  Symbol(Procedure Symbol) id(hello)
    type(Subprogram)
        Return Type
          type(Void)
            size(0) alignment(0)
        Parameter Types
    lexicallevel(1) elabel(L00004) splabel(L00005) eplabel(L00006)

Locality: lexical level 0

  Symbol(Standard Function Symbol) id(abs)
    type(Void)
      size(0) alignment(0)
    cspid(abs)
  Symbol(Type Symbol) id(boolean)
    type(Boolean)
      size(1) alignment(1)
  Symbol(Type Symbol) id(char)
    type(Character)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(chr)
    type(Void)
      size(0) alignment(0)
    cspid(chr)
  Symbol(Constant Symbol) id(false)
    type(Boolean)
      size(1) alignment(1)
    Constant value(0)
      type(Boolean)
        size(1) alignment(1)
  Symbol(Type Symbol) id(integer)
    type(Integer)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(ord)
    type(Void)
      size(0) alignment(0)
    cspid(ord)
  Symbol(Program Symbol) id(p036_000)
    type(Void)
      size(0) alignment(0)
    lexicallevel(0) elabel(L00001) splabel(L00002) eplabel(L00003)
  Symbol(Standard Function Symbol) id(pred)
    type(Void)
      size(0) alignment(0)
    cspid(dec)
  Symbol(Standard Procedure Symbol) id(readchar)
    type(Void)
      size(0) alignment(0)
    cspid(rdc)
  Symbol(Standard Procedure Symbol) id(readinteger)
    type(Void)
      size(0) alignment(0)
    cspid(rdi)
  Symbol(Standard Procedure Symbol) id(readln)
    type(Void)
      size(0) alignment(0)
    cspid(rln)
  Symbol(Standard Procedure Symbol) id(readreal)
    type(Void)
      size(0) alignment(0)
    cspid(rdr)
  Symbol(Standard Procedure Symbol) id(readstring)
    type(Void)
      size(0) alignment(0)
    cspid(rds)
  Symbol(Type Symbol) id(real)
    type(Real)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(round)
    type(Void)
      size(0) alignment(0)
    cspid(rnd)
  Symbol(Standard Function Symbol) id(sqrt)
    type(Void)
      size(0) alignment(0)
    cspid(sqt)
  Symbol(Standard Function Symbol) id(succ)
    type(Void)
      size(0) alignment(0)
    cspid(inc)
  Symbol(Constant Symbol) id(true)
    type(Boolean)
      size(1) alignment(1)
    Constant value(1)
      type(Boolean)
        size(1) alignment(1)
  Symbol(Standard Function Symbol) id(trunc)
    type(Void)
      size(0) alignment(0)
    cspid(trc)
  Symbol(Standard Procedure Symbol) id(writeboolean)
    type(Void)
      size(0) alignment(0)
    cspid(wrb)
  Symbol(Standard Procedure Symbol) id(writechar)
    type(Void)
      size(0) alignment(0)
    cspid(wrc)
  Symbol(Standard Procedure Symbol) id(writeexponential)
    type(Void)
      size(0) alignment(0)
    cspid(wre)
  Symbol(Standard Procedure Symbol) id(writefixed)
    type(Void)
      size(0) alignment(0)
    cspid(wrf)
  Symbol(Standard Procedure Symbol) id(writeinteger)
    type(Void)
      size(0) alignment(0)
    cspid(wri)
  Symbol(Standard Procedure Symbol) id(writeln)
    type(Void)
      size(0) alignment(0)
    cspid(wln)
  Symbol(Standard Procedure Symbol) id(writestring)
    type(Void)
      size(0) alignment(0)
    cspid(wrs)

