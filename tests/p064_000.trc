
Token:Code=292 Name=PROGRAM line=12 col=1 Spelling="program"
Token:Code=298 Name=ID line=12 col=9 Spelling="p064_000"
Token:Code=265 Name=SEMICOLON line=12 col=17 Spelling=";"
#005 program_parameters --> empty
#002 program_head --> PROGRAM ID(p064_000) program_parameters ;
#010 variable_declarations --> empty
Token:Code=296 Name=VAR line=13 col=3 Spelling="var"
Token:Code=298 Name=ID line=13 col=7 Spelling="a"
#008 identifier_list --> ID(a) identifier_list={a}
Token:Code=266 Name=COLON line=13 col=8 Spelling=":"
Token:Code=279 Name=ARRAY line=13 col=9 Spelling="array"
Token:Code=275 Name=LBRACKET line=13 col=14 Spelling="["
Token:Code=299 Name=INTLIT line=13 col=15 Spelling="1"
Token:Code=277 Name=RANGE line=13 col=16 Spelling=".."
Token:Code=299 Name=INTLIT line=13 col=18 Spelling="10"
Token:Code=276 Name=RBRACKET line=13 col=20 Spelling="]"
Token:Code=289 Name=OF line=13 col=22 Spelling="of"
Token:Code=298 Name=ID line=13 col=25 Spelling="real"
#014 standard_type --> ID(real)
Symbol(Type Symbol) id(real)
  type(Real)
    size(1) alignment(1)
#013 type --> ARRAY [ INTLIT(1) .. INTLIT(10) ] OF standard_type
Token:Code=265 Name=SEMICOLON line=13 col=29 Spelling=";"
#011 variable_declarations --> variable_declarations VAR identifier_list({a}) : type ; 
Token:Code=296 Name=VAR line=14 col=3 Spelling="var"
Token:Code=298 Name=ID line=14 col=7 Spelling="r"
#008 identifier_list --> ID(r) identifier_list={r}
Token:Code=266 Name=COLON line=14 col=8 Spelling=":"
Token:Code=298 Name=ID line=14 col=9 Spelling="real"
#014 standard_type --> ID(real)
Symbol(Type Symbol) id(real)
  type(Real)
    size(1) alignment(1)
#012 type --> standard_type 
Token:Code=265 Name=SEMICOLON line=14 col=13 Spelling=";"
#011 variable_declarations --> variable_declarations VAR identifier_list({r}) : type ; 
Token:Code=280 Name=BEGIN line=15 col=1 Spelling="begin"
#015 subprogram_declarations --> empty
#003 program_declarations --> variable_declarations subprogram_declarations
Token:Code=298 Name=ID line=16 col=3 Spelling="a"
Token:Code=275 Name=LBRACKET line=16 col=4 Spelling="["
Token:Code=299 Name=INTLIT line=16 col=5 Spelling="2"
#068 factor --> INTLIT(2) 
#056 term --> factor 
Token:Code=276 Name=RBRACKET line=16 col=6 Spelling="]"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#035 variable --> ID(a) [ expression ] 
          lda       0         14        
          ldc       i         2         
          ldc       i         1         
          sbi                           
          ixa                 1         
Token:Code=262 Name=ASSIGN line=16 col=7 Spelling=":="
Token:Code=300 Name=REALIT line=16 col=9 Spelling="3.14159"
#069 factor --> REALIT(3.14159) 
#056 term --> factor 
Token:Code=265 Name=SEMICOLON line=16 col=16 Spelling=";"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#029 statement --> variable := expression 
          lda       0         14        
          ldc       i         2         
          ldc       i         1         
          sbi                           
          ixa                 1         
          ldc       r         3.14159   
          sti       r                   
#027 statement_list --> statement 
Token:Code=298 Name=ID line=17 col=3 Spelling="r"
Token:Code=262 Name=ASSIGN line=17 col=4 Spelling=":="
#034 variable --> ID(r)
Symbol(Variable Symbol) id(r)
  type(Real)
    size(1) alignment(1)
  lexicallevel(1) address(15)
          lda       0         15        
Token:Code=298 Name=ID line=17 col=6 Spelling="a"
Token:Code=275 Name=LBRACKET line=17 col=7 Spelling="["
Token:Code=299 Name=INTLIT line=17 col=8 Spelling="2"
#068 factor --> INTLIT(2) 
#056 term --> factor 
Token:Code=276 Name=RBRACKET line=17 col=9 Spelling="]"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#064 factor --> ID(a) [ expression ] 
          lda       0         14        
          ldc       i         2         
          ldc       i         1         
          sbi                           
          ixa                 1         
          ind       r                   
#056 term --> factor 
Token:Code=284 Name=END line=18 col=1 Spelling="end"
#048 simple_expression --> term 
#040 expression --> simple_expression 
#029 statement --> variable := expression 
          lda       0         15        
          lda       0         14        
          ldc       i         2         
          ldc       i         1         
          sbi                           
          ixa                 1         
          ind       r                   
          sti       r                   
#028 statement_list --> statement_list ; statement 
#026 optional_statements --> statement_list 
#024 compound_statement --> BEGIN optional_statements END 
Token:Code=263 Name=PERIOD line=18 col=14 Spelling="."
#004 program_body --> compound_statement .
#001 program --> program_head program_declarations program_body
Locality: lexical level 1

  Symbol(Variable Symbol) id(a)
    type(Array)
      Size(10)
      Index Type
        type(Range)
          Constant value(1)
            type(Integer)
              size(1) alignment(1)
          Constant value(10)
            type(Integer)
              size(1) alignment(1)
      Element Type
        type(Real)
          size(1) alignment(1)
    lexicallevel(1) address(14)
  Symbol(Variable Symbol) id(r)
    type(Real)
      size(1) alignment(1)
    lexicallevel(1) address(15)

Locality: lexical level 0

  Symbol(Standard Function Symbol) id(abs)
    type(Void)
      size(0) alignment(0)
    cspid(abs)
  Symbol(Type Symbol) id(boolean)
    type(Boolean)
      size(1) alignment(1)
  Symbol(Type Symbol) id(char)
    type(Character)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(chr)
    type(Void)
      size(0) alignment(0)
    cspid(chr)
  Symbol(Constant Symbol) id(false)
    type(Boolean)
      size(1) alignment(1)
    Constant value(0)
      type(Boolean)
        size(1) alignment(1)
  Symbol(Type Symbol) id(integer)
    type(Integer)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(ord)
    type(Void)
      size(0) alignment(0)
    cspid(ord)
  Symbol(Program Symbol) id(p064_000)
    type(Void)
      size(0) alignment(0)
    lexicallevel(0) elabel(L00001) splabel(L00002) eplabel(L00003)
  Symbol(Standard Function Symbol) id(pred)
    type(Void)
      size(0) alignment(0)
    cspid(dec)
  Symbol(Standard Procedure Symbol) id(readchar)
    type(Void)
      size(0) alignment(0)
    cspid(rdc)
  Symbol(Standard Procedure Symbol) id(readinteger)
    type(Void)
      size(0) alignment(0)
    cspid(rdi)
  Symbol(Standard Procedure Symbol) id(readln)
    type(Void)
      size(0) alignment(0)
    cspid(rln)
  Symbol(Standard Procedure Symbol) id(readreal)
    type(Void)
      size(0) alignment(0)
    cspid(rdr)
  Symbol(Standard Procedure Symbol) id(readstring)
    type(Void)
      size(0) alignment(0)
    cspid(rds)
  Symbol(Type Symbol) id(real)
    type(Real)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(round)
    type(Void)
      size(0) alignment(0)
    cspid(rnd)
  Symbol(Standard Function Symbol) id(sqrt)
    type(Void)
      size(0) alignment(0)
    cspid(sqt)
  Symbol(Standard Function Symbol) id(succ)
    type(Void)
      size(0) alignment(0)
    cspid(inc)
  Symbol(Constant Symbol) id(true)
    type(Boolean)
      size(1) alignment(1)
    Constant value(1)
      type(Boolean)
        size(1) alignment(1)
  Symbol(Standard Function Symbol) id(trunc)
    type(Void)
      size(0) alignment(0)
    cspid(trc)
  Symbol(Standard Procedure Symbol) id(writeboolean)
    type(Void)
      size(0) alignment(0)
    cspid(wrb)
  Symbol(Standard Procedure Symbol) id(writechar)
    type(Void)
      size(0) alignment(0)
    cspid(wrc)
  Symbol(Standard Procedure Symbol) id(writeexponential)
    type(Void)
      size(0) alignment(0)
    cspid(wre)
  Symbol(Standard Procedure Symbol) id(writefixed)
    type(Void)
      size(0) alignment(0)
    cspid(wrf)
  Symbol(Standard Procedure Symbol) id(writeinteger)
    type(Void)
      size(0) alignment(0)
    cspid(wri)
  Symbol(Standard Procedure Symbol) id(writeln)
    type(Void)
      size(0) alignment(0)
    cspid(wln)
  Symbol(Standard Procedure Symbol) id(writestring)
    type(Void)
      size(0) alignment(0)
    cspid(wrs)

